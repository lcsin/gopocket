package main

import "google.golang.org/protobuf/compiler/protogen"

const (
	gin  = protogen.GoImportPath("github.com/gin-gonic/gin")
	http = protogen.GoImportPath("net/http")
)

func generateFile(gen *protogen.Plugin, file *protogen.File) *protogen.GeneratedFile {

	// 设置生成文件的文件名,该文件名会被protoc使用
	filename := file.GeneratedFilenamePrefix + "_gin.pb.go"
	g := gen.NewGeneratedFile(filename, file.GoImportPath)

	// go的die会识别该注释,表示该文件是自动生成文件,提示用户不要修改
	g.P("// Code generated by protoc-gen-gin. DO NOT EDIT.")
	g.P()
	g.P("package ", file.GoPackageName)
	g.P()

	// 注册依赖包
	g.QualifiedGoIdent(gin.Ident(""))
	g.QualifiedGoIdent(http.Ident(""))

	// 遍历proto文件中的service块,循环往生成代码中写入方法
	for _, s := range file.Services {
		srv := &ginSrv{
			Name: s.GoName,
		}

		for _, m := range s.Methods {
			srv.Methods = append(srv.Methods, &method{
				Name:     m.GoName,
				Request:  m.Input.GoIdent.GoName,
				Response: m.Output.GoIdent.GoName,
				Comment:  m.Comments.Leading.String(),
			})
		}

		// 将模板中的buf写入
		g.P(srv.execute())
	}

	return g
}
